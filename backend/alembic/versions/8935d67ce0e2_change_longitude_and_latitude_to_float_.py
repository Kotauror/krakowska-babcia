"""change longitude and latitude to float in posts

Revision ID: 8935d67ce0e2
Revises: 1a31d7abbe68
Create Date: 2025-06-08 13:38:32.395702

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8935d67ce0e2'
down_revision: Union[str, None] = '1a31d7abbe68'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create the enum type first
    posttype = postgresql.ENUM('kultura', 'natura', 'sport', name='posttype')
    posttype.create(op.get_bind())
    op.drop_table('featured_posts')
    op.add_column('posts', sa.Column('longitude', sa.Float(), nullable=True))
    op.add_column('posts', sa.Column('latitude', sa.Float(), nullable=True))
    op.add_column('posts', sa.Column('type', posttype, nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('posts', 'type')
    op.drop_column('posts', 'latitude')
    op.drop_column('posts', 'longitude')
    op.create_table('featured_posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='featured_posts_post_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='featured_posts_pkey')
    )
    posttype = postgresql.ENUM('kultura', 'natura', 'sport', name='posttype')
    posttype.drop(op.get_bind())
    # ### end Alembic commands ###
